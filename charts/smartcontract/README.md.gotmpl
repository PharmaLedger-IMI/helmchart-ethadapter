{{ template "chart.header" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}{{ template "chart.appVersionBadge" . }}

{{ template "chart.description" . }}

## Requirements

- [helm 3](https://helm.sh/docs/intro/install/)
- URL of the Quorum node to communicate with in order to deploy the smart contract - See config parameter `config.quorumNodeUrl`

## Usage

- [Here](./README.md#values) is a full list of all configuration values.
- The [values.yaml file](./values.yaml) shows the raw view of all configuration values.

## How it works

1. A Kubernetes Job will be deployed which triggers scheduling of a Pod
2. The Pod generates an *OrgAccount* and anchors the SmartContract on the Quorum Blockchain.
3. The OrgAccount data will be stored in a Kubernetes Secret and the Smart Contract Anchoring Info (e.g. address) will being stored in a Kubernetes ConfigMap.

![How it works](./docs/smartcontract.drawio.png)

Note: Persisting these values in Kubernetes resources (Secret and ConfigMap) enables auto-configuration of *ethadapter* on a Sandbox environment.

## Installing the Chart

To install the chart with the release name `smartcontract` in namespace `ethadapter`:

```bash
helm upgrade --install smartcontract ph-ethadapter/smartcontract \
  --version={{ template "chart.version" . }} \
  --namespace=ethadapter --create-namespace \
  --wait --wait-for-jobs \
  --timeout 10m

```

**IMPORTANT** On a sandbox environment, install into the same namespace as *ethadapter* (usually namespace `ethadapter`). Otherwise *ethadapter* cannot auto-configure itself by reading values from Secret and ConfigMap.

## Uninstalling the Chart

To uninstall/delete the `smartcontract` deployment:

```bash
helm delete smartcontract \
  --namespace=ethadapter

```

{{ template "chart.maintainersSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

{{ template "helm-docs.versionFooter" . }}
