# Default values for epi.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- The number of replicas if autoscaling is false
replicaCount: 1

image:
  # -- The repository of the container image
  repository: public.ecr.aws/n4q1q0z2/pharmaledger-epi
  # -- Image Pull Policy
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

## -- The strategy of the deployment. Defaults to Recreate as a PVC is bound to it.
## See `kubectl explain deployment.spec.strategy` for more and [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy)
deploymentStrategy:
  type: Recreate

# -- Secret(s) for pulling an container image from a private registry.
# See [https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/)
imagePullSecrets: []
# -- nameOverride replaces the name of the chart in the Chart.yaml file, when this is used to construct Kubernetes object names.
# From [https://stackoverflow.com/questions/63838705/what-is-the-difference-between-fullnameoverride-and-nameoverride-in-helm](https://stackoverflow.com/questions/63838705/what-is-the-difference-between-fullnameoverride-and-nameoverride-in-helm)
nameOverride: ""
# -- fullnameOverride completely replaces the generated name.
# From [https://stackoverflow.com/questions/63838705/what-is-the-difference-between-fullnameoverride-and-nameoverride-in-helm](https://stackoverflow.com/questions/63838705/what-is-the-difference-between-fullnameoverride-and-nameoverride-in-helm)
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Annotations added to the pod
podAnnotations: {}

# -- Security Context for the pod.
# See [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
podSecurityContext: {}
  # fsGroup: 2000

# -- Security Context for the container.
# See [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container)
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

initJob:
  kubectlImage:
    # -- The repository of the container image
    repository: bitnami/kubectl
    # -- Image Pull Policy
    pullPolicy: IfNotPresent
    # -- The Tag of the image containing kubectl. Minor Version should match to your Kubernetes Cluster Version.
    tag: "1.21.8"

persistence:
  storageClassName: "gp2"
  size: "20Gi"

service:
  # -- Either ClusterIP, NodePort or LoadBalancer.
  # See [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
  type: ClusterIP
  # -- Port where the service will be exposed
  port: 80
  # -- Annotations for the service.
  # See AWS, see [https://kubernetes.io/docs/concepts/services-networking/service/#ssl-support-on-aws](https://kubernetes.io/docs/concepts/services-networking/service/#ssl-support-on-aws)
  # For Azure, see [https://kubernetes-sigs.github.io/cloud-provider-azure/topics/loadbalancer/#loadbalancer-annotations](https://kubernetes-sigs.github.io/cloud-provider-azure/topics/loadbalancer/#loadbalancer-annotations)
  annotations: {}

# -- Configuration. Will be put in a configmap.
# Required values: rpcAddress, smartContractAddress, smartContractAbi
config:
  # IMPORTANT: Set these values!
  # rpcAddress: "rpcAddress_value"
  # smartContractAddress: "smartContractAddress_value"
  # smartContractAbi: "smartContractAbi_value"

  # -- The Domain, e.g. "epipoc"
  domain: "epipoc"
  # -- The Subdomain, should be domain.company, e.g. epipoc.my-company
  subDomain: "epipoc.my-company"
  # -- The Vault domain, should be vault.company, e.g. vault.my-company
  vaultDomain: "vault.my-company"
  # -- The Full URL of the Ethadapter including protocol and port, e.g. "https://ethadapter.my-company.com:3000"
  ethadapterUrl: "https://ethadapter.my-company.com:3000"
  # -- Centrally managed and provided BDNS Hosts Config
  bdnsHosts: |-
    {
      "epipoc": {
          "anchoringServices": [
              "$ORIGIN"
          ],
          "notifications": [
              "$ORIGIN"
          ]
      },
      "epipoc.my-company": {
          "brickStorages": [
              "$ORIGIN"
          ],
          "anchoringServices": [
              "$ORIGIN"
          ],
          "notifications": [
              "$ORIGIN"
          ]
      },
      "epipoc.other": {
          "brickStorages": [
              "https://epipoc.other-company.com"
          ],
          "anchoringServices": [
              "https://epipoc.other-company.com"
          ],
          "notifications": [
              "https://epipoc.other-company.com"
          ]
      },
      "vault.my-company": {
          "replicas": [],
          "brickStorages": [
              "$ORIGIN"
          ],
          "anchoringServices": [
              "$ORIGIN"
          ],
          "notifications": [
              "$ORIGIN"
          ]
      }
    }

ingress:
  # -- Whether to create ingress or not.
  # Note: For ingress an Ingress Controller (e.g. AWS LB Controller, NGINX Ingress Controller, Traefik, ...) is required and service.type should be ClusterIP or NodePort depending on your configuration
  enabled: false
  # -- The className specifies the IngressClass object which is responsible for that class.
  # Note for Kubernetes >= 1.18 it is required to have an existing IngressClass object.
  # If IngressClass object does not exists, omit className and add the deprecated annotation 'kubernetes.io/ingress.class' instead.
  # For Kubernetes < 1.18 either use className or annotation 'kubernetes.io/ingress.class'.
  # See https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class
  className: ""
  # -- Ingress annotations.
  # For AWS LB Controller, see [https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.3/guide/ingress/annotations/](https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.3/guide/ingress/annotations/)
  # For Azure Application Gateway Ingress Controller, see [https://azure.github.io/application-gateway-kubernetes-ingress/annotations/](https://azure.github.io/application-gateway-kubernetes-ingress/annotations/)
  # For NGINX Ingress Controller, see [https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/](https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/)
  # For Traefik Ingress Controller, see [https://doc.traefik.io/traefik/routing/providers/kubernetes-ingress/#annotations](https://doc.traefik.io/traefik/routing/providers/kubernetes-ingress/#annotations)
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- A list of hostnames and path(s) to listen at the Ingress Controller
  hosts:
    - # -- The FQDN/hostname
      host: epi.some-pharma-company.com
      paths:
        - # -- The Ingress Path. See [https://kubernetes.io/docs/concepts/services-networking/ingress/#examples](https://kubernetes.io/docs/concepts/services-networking/ingress/#examples)
          # Note: For Ingress Controllers like AWS LB Controller see their specific documentation.
          path: /
          # -- The type of path. This value is required since Kubernetes 1.18.
          # For Ingress Controllers like AWS LB Controller or Traefik it is usually required to set its value to ImplementationSpecific
          # See [https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types](https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types)
          # and [https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/](https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/)
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Resource constraints for the container
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Node Selectors in order to assign pods to certain nodes.
# See [https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/)
nodeSelector: {}

# -- Tolerations for scheduling a pod.
# See [https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/)
tolerations: []

# -- Affinity for scheduling a pod.
# See [https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/)
affinity: {}

# -- Liveness probe.
# See [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3

# -- Readiness probe.
# See [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3
